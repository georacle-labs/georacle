# This is an example docker-compose file used to run an
# isolated Georacle network in a contained environment

# This example starts 3 nodes (georacle0, georacle1, georacle2)
# To add more nodes to the network:
# - create a new data store
# - point the db-uri to the new data store
# - keep the ws-uri unchanged to join the same eth network

services:

  # local geth dev node
  geth:
    image: ethereum/client-go:latest
    restart: unless-stopped

    # expose geth node externally.
    # to connect to console run: geth attach http://127.0.0.1:8545
    ports:
     - "30303:30303"
     - "30303:30303/udp"
     - "8545:8545"
     - "8546:8546"
    volumes: # persist chain data
      - ./chaindata:/chaindata
    stop_signal: SIGINT
    stop_grace_period: 2m
    command:
      - --dev
      - --http
      - --http.corsdomain
      - "https://remix.ethereum.org"
      - --http.api
      - "web3,eth,debug,personal,net"
      - --http.addr=0.0.0.0
      - --ws
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --ws.api
      - "web3,eth,debug,personal,net"
      - --vmdebug
      - --datadir
      - "/chaindata"

  mongo0:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: georacle
      MONGO_INITDB_ROOT_PASSWORD: example-password
  georacle0:
    image: georacle:latest
    environment:
      PROVIDERS: ${PROVIDERS} # providers contract address
    command:
      - start
      - --network
      - "localhost"
      - --ws-uri
      - "ws://geth:8546"
      - --db-uri
      - "mongodb://georacle:example-password@mongo0:27017/"
      - --addr
      - "georacle0"
      - --port
      - "3141"
      - --password
      - ${KEYSTORE_SECRET} # From env variable if set
    depends_on:
      - geth
      - mongo0

  mongo1:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: georacle
      MONGO_INITDB_ROOT_PASSWORD: example-password
  georacle1:
    image: georacle:latest
    environment:
      PROVIDERS: ${PROVIDERS} # providers contract address
    command:
      - start
      - --network
      - "localhost"
      - --ws-uri
      - "ws://geth:8546"
      - --db-uri
      - "mongodb://georacle:example-password@mongo1:27017/"
      - --addr
      - "georacle1"
      - --port
      - "3141"
      - --password
      - ${KEYSTORE_SECRET} # From env variable if set
    depends_on:
      - geth
      - mongo1

  mongo2:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: georacle
      MONGO_INITDB_ROOT_PASSWORD: example-password
  georacle2:
    image: georacle:latest
    environment:
      PROVIDERS: ${PROVIDERS} # providers contract address
    command:
      - start
      - --network
      - "localhost"
      - --ws-uri
      - "ws://geth:8546"
      - --db-uri
      - "mongodb://georacle:example-password@mongo2:27017/"
      - --addr
      - "georacle2"
      - --port
      - "3141"
      - --password
      - ${KEYSTORE_SECRET} # From env variable if set
    depends_on:
      - geth
      - mongo2

# To add a node to the network:
#
# 1. add new data store
# mongo3:
#   image: mongo
#   restart: always
#   environment:
#     MONGO_INITDB_ROOT_USERNAME: georacle
#     MONGO_INITDB_ROOT_PASSWORD: example-password
#
# 2. add new georacle node
# georacle3:
#   image: georacle:latest
#   environment:
#     PROVIDERS: ${PROVIDERS} # providers contract address
#   command:
#     - start
#     - --network
#     - "localhost"
#     - --ws-uri # NOTE: keep ws-uri unchanged to join the same eth network
#     - "ws://geth:8546"
#     - --db-uri # NOTE: point db-uri to new data store
#     - "mongodb://georacle:example-password@mongo3:27017/"
#     - --addr
#     - "georacle3"
#     - --port
#     - "3141"
#     - --password
#     - ${KEYSTORE_SECRET} # From env variable if set
#   depends_on:
#     - geth
#     - mongo3
